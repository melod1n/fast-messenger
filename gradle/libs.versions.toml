[versions]
agp = "8.2.0"
benchmarkMacroJunit4 = "1.2.1"
converterMoshi = "2.4.0"
hijacker = "1.0.0"
kotlin = "1.9.20"
ksp = "1.9.20-1.0.14"

accompanist = "0.32.0"
coil = "2.5.0"
coil-compose = "2.5.0"
glide-compiler = "4.16.0"
compose = "1.5.4"
compose-bom = "2023.10.01"
composeMaterial3Pullrefresh = "1.0.1"
converterGson = "2.9.0"
junit = "4.13.2"
chucker = "4.0.0"
guava = "32.1.3-jre"
gson = "2.10.1"
kotlinxCoroutinesAndroid = "1.7.3"
kotlinxCoroutinesCore = "1.7.3"
kpermissionsCoroutines = "3.4.0"
kpermissions = "3.4.0"
glide = "4.16.0"
leakcanaryAndroid = "2.12"
lifecycle-runtime-ktx = "2.6.2"
lifecycle-viewmodel-ktx = "2.6.2"
core-ktx = "1.12.0"
koin-androidx-compose-navigation = "3.5.2-RC1"
koin-androidx-compose = "3.5.2-RC1"
koin-android = "3.5.0"
material = "1.10.0"
loggingInterceptor = "5.0.0-alpha.11"
moshiKotlinCodegen = "1.14.0"
moshiKotlin = "1.14.0"
profileinstaller = "1.3.1"
retrofit = "2.9.0"
shake = "16.2.2"
voyagerVersion = "1.0.0-rc10"
room-compiler = "2.6.1"
room-runtime = "2.6.1"
room-ktx = "2.6.1"
preference-ktx = "1.2.1"

[libraries]
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
benchmark-macro-junit4 = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmarkMacroJunit4" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil-compose" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "converterMoshi" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide-compiler" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-material3-windowsize = { module = "androidx.compose.material3:material3-window-size-class" }
compose-activity = { module = "androidx.activity:activity-compose" }
compose-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose" }
compose-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose" }
compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
compose-material3-pullrefresh = { module = "eu.bambooapps:compose-material3-pullrefresh", version.ref = "composeMaterial3Pullrefresh" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
hijacker = { module = "me.gingerninja.lazylist:hijacker", version.ref = "hijacker" }
junit = { module = "junit:junit", version.ref = "junit" }
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kpermissions-coroutines = { module = "com.github.fondesa:kpermissions-coroutines", version.ref = "kpermissionsCoroutines" }
kpermissions = { module = "com.github.fondesa:kpermissions", version.ref = "kpermissions" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroid" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel-ktx" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
koin-androidx-compose-navigation = { module = "io.insert-koin:koin-androidx-compose-navigation", version.ref = "koin-androidx-compose-navigation" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-androidx-compose" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-android" }
material = { module = "com.google.android.material:material", version.ref = "material" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiKotlinCodegen" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }
profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
shake = { module = "com.shakebugs:shake", version.ref = "shake" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyagerVersion" }
voyager-androidx = { module = "cafe.adriel.voyager:voyager-androidx", version.ref = "voyagerVersion" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room-compiler" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room-runtime" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room-ktx" }
preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preference-ktx" }

[bundles]
compose = [
    "compose-material3",
    "compose-material3-windowsize",
    "compose-ui",
    "compose-ui-tooling-preview",
    "compose-activity",
    "compose-lifecycle-viewmodel",
    "compose-lifecycle-runtime",
    "compose-runtime-saveable"
]

[plugins]
com-android-application = { id = "com.android.application", version.ref = "agp" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
com-google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
org-jetbrains-kotlin-plugin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
